{"version":3,"sources":["components/chatWrap.js","utils.js","components/chatItemnew.js","routes.js","components/chatBlock.js","App.js","serviceWorker.js","firebaseConfig.js","index.js"],"names":["ChatWrap","className","path","name","img","map","item","idx","key","to","src","alt","activeStyle","color","convertUnixTimestamp","timestamp","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","images","john_show","pedro","martin","sherlock","monica","dallas","bot","ChatItemNew","props","time","Math","floor","now","useState","text","userMessage","messageState","setFormState","getMessageToFirestore","useFirestore","collection","doc","messages","useFirestoreCollectionData","addMessageToFirestore","randomBotMessage","sendMessageToFirestore","message","console","log","add","style","position","sort","prev","next","reverse","placeholder","onChange","event","target","value","prevNote","handleChange","onKeyPress","e","shiftKey","preventDefault","onClick","max","length","random","RoutesItem","exact","component","ChatBlock","App","display","backgroundColor","Boolean","window","location","hostname","match","app","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fallback","traceId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8717c6ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nfunction ChatWrap() {\r\n\r\n    const contact_user = [\r\n        {\r\n            path: '/john_show',\r\n            name: 'John Show',\r\n            img: 'https://ktovkurse.com/wp-content/uploads/2015/06/jon-Snow-e1435181608374.jpg'\r\n        },\r\n        {\r\n            path: '/martin',\r\n            name: 'Martin',\r\n            img: 'https://lh3.googleusercontent.com/mIUvQSu1ja5Lpx-HS0ztqFPkudgzU0GGwZGJNaVZ8_D_31zC7mhw5eM8TwRJ_ByBY4UyYg=s85'\r\n        },\r\n        {\r\n            path: '/sherlock',\r\n            name: 'Sherlock',\r\n            img: 'https://i.guim.co.uk/img/static/sys-images/Guardian/Pix/pictures/2014/1/13/1389634544964/Sherlock-Holmes-BBC-011.jpg?width=445&quality=85&auto=format&fit=max&s=ff65ab18713d2fa201c8181ae127ee30'\r\n        },\r\n        {\r\n            path: '/monica',\r\n            name: 'Monica',\r\n            img: 'https://i.pinimg.com/736x/19/31/e6/1931e627532feeb3232d4e00ae5d2924.jpg'\r\n        },\r\n        {\r\n            path: '/dallas',\r\n            name: 'Dallas',\r\n            img: 'https://fs.kinomania.ru/file/person/1/c0/1c0cae540f9eeeaf4830019bd17a1e47.jpeg'\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"contacts-wrap\">\r\n            <div className=\"contact\">\r\n                {\r\n                    contact_user.map((item, idx) => (\r\n                        <div className={\"contact-user\"} key={idx}>\r\n                            <div className=\"contact-user-foto\">\r\n                                <Link to={item.path}>\r\n                                    <img src={item.img} alt={item.name} />\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"contact-user-info\">\r\n                                <div className=\"contact-user-top\">\r\n                                    <Link to={item.path} className=\"contact-user-name \" activeStyle={{ color: 'red' }}>{item.name}</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWrap;","export const convertUnixTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp * 1000);\r\n    const hours = date.getHours();\r\n    const minutes = \"0\" + date.getMinutes();\r\n    const seconds = \"0\" + date.getSeconds();\r\n    const formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n    return formattedTime\r\n}","import React, { useState } from 'react';\r\nimport { useFirestore, useFirestoreCollectionData } from \"reactfire\";\r\n\r\nimport { convertUnixTimestamp } from './../utils';\r\n\r\nconst images = {\r\n    john_show: 'https://ktovkurse.com/wp-content/uploads/2015/06/jon-Snow-e1435181608374.jpg',\r\n    pedro: 'https://ktovkurse.com/wp-content/uploads/2015/06/jon-Snow-e1435181608374.jpg',\r\n    martin: 'https://lh3.googleusercontent.com/mIUvQSu1ja5Lpx-HS0ztqFPkudgzU0GGwZGJNaVZ8_D_31zC7mhw5eM8TwRJ_ByBY4UyYg=s85',\r\n    sherlock: 'https://i.guim.co.uk/img/static/sys-images/Guardian/Pix/pictures/2014/1/13/1389634544964/Sherlock-Holmes-BBC-011.jpg?width=445&quality=85&auto=format&fit=max&s=ff65ab18713d2fa201c8181ae127ee30',\r\n    monica: 'https://i.pinimg.com/736x/19/31/e6/1931e627532feeb3232d4e00ae5d2924.jpg',\r\n    dallas:  'https://fs.kinomania.ru/file/person/1/c0/1c0cae540f9eeeaf4830019bd17a1e47.jpeg',\r\n    bot: 'https://snipp.ru/uploads/view/d880306f44d95f58d3a955e22d3ae165.png'\r\n}\r\n\r\nfunction ChatItemNew(props) {\r\n\r\n    const time = Math.floor(Date.now() / 1000)\r\n    const [ messageState, setFormState ] = useState( {\r\n            text: '',\r\n            time: time,\r\n            userMessage: true\r\n        }\r\n    )\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormState((prevNote) => {\r\n            return {\r\n                ...prevNote,\r\n                [name]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleUserKeyPress = e => {\r\n        if (e.key === \"Enter\" && !e.shiftKey) {\r\n            e.preventDefault();\r\n            console.log('handleUserKeyPress')\r\n            sendMessageToFirestore(messageState)\r\n            setFormState({\r\n                text: '',\r\n                time: Math.floor(Date.now() / 1000),\r\n                userMessage: true\r\n            })\r\n        }\r\n    };\r\n\r\n    const getMessageToFirestore = useFirestore()\r\n        .collection('chat')\r\n        .doc(`${props.name}`)\r\n        .collection('messages')\r\n\r\n    const messages = useFirestoreCollectionData(getMessageToFirestore)\r\n\r\n\r\n    const addMessageToFirestore = useFirestore()\r\n        .collection('chat')\r\n        .doc(`${props.name}`)\r\n        .collection('messages')\r\n\r\n\r\n    // Bot\r\n\r\n\r\n    const randomBotMessage = [\r\n        {\r\n            text: 'Hi I`m bot',\r\n            time: Math.floor(Date.now() / 1000),\r\n        },\r\n        {\r\n            text: `Time is ${convertUnixTimestamp(Math.floor(Date.now() / 1000))}`,\r\n            time: Math.floor(Date.now() / 1000),\r\n        },\r\n        {\r\n            text: `Time is ${Math.floor(Date.now() / 1000)}`,\r\n            time: Math.floor(Date.now() / 1000),\r\n        },\r\n        {\r\n            text: 'I am a doctor',\r\n            time: Math.floor(Date.now() / 1000),\r\n        },\r\n        {\r\n            text: 'I like Help',\r\n            time: Math.floor(Date.now() / 1000),\r\n        },\r\n        {\r\n            text: 'JS Rules',\r\n            time: Math.floor(Date.now() / 1000),\r\n        },\r\n    ]\r\n\r\n\r\n    const botMessage = {\r\n        text: 'Hi I`m bot',\r\n        time: time,\r\n        userMessage: false\r\n    }\r\n\r\n    function sendMessageToFirestore(message) {\r\n        console.log('sendMessageToFirestore');\r\n        addMessageToFirestore.add({message})\r\n    }\r\n\r\n\r\n    function getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    function sortByAge(arr) {\r\n        arr.sort((a, b) => a.age > b.age ? 1 : -1);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"blocked-wrap\">\r\n            <div style={{position: 'relative'}}>\r\n                <div className=\"chat\">\r\n                    {\r\n                        messages\r\n                            .sort((prev, next) => prev.message.time - next.message.time)\r\n                            .reverse()\r\n                            .map((item, idx) => (\r\n                            <div className={`chat-message ${item.message.userMessage ? 'user-message' : ''}`} key={idx}>\r\n                                <div className=\"chat-message-foto\">\r\n                                    <img src={`${item.message.userMessage ? images[props.name] : images.bot}`} alt={idx} />\r\n                                </div>\r\n                                <div className=\"chat-message-text\">\r\n                                    {item.message && item.message.text}\r\n                                </div>\r\n                                <div className=\"chat-message-time\">\r\n                                    {convertUnixTimestamp(item.message.time)}\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-form\">\r\n                <form >\r\n                    <div className=\"textarea-wrap\" >\r\n                        <textarea\r\n                            placeholder=\"Text\"\r\n                            onChange={event => handleChange(event)}\r\n                            value={messageState.text}\r\n                            name=\"text\"\r\n                            onKeyPress={handleUserKeyPress}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"textarea-count-wrap\">\r\n                        <div className=\"checkbox-wrap\">\r\n                            <label>Press Enter to send</label>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <button onClick={() => sendMessageToFirestore(randomBotMessage[getRandomInt(randomBotMessage.length)])}>add bot message</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatItemNew;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport ChatItemNew from \"./components/chatItemnew\";\r\n\r\nfunction RoutesItem() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Redirect to=\"/john_show\" />\r\n            </Route>\r\n            <Route path='/john_show'  component={() => ChatItemNew({name: 'john_show'})} />\r\n            <Route path='/martin' component={() => ChatItemNew({name: 'martin'})} />\r\n            <Route path='/sherlock' component={() => ChatItemNew({name: 'sherlock'})} />\r\n            <Route path='/monica' component={() => ChatItemNew({name: 'monica'})} />\r\n            <Route path='/dallas' component={() => ChatItemNew({name: 'dallas'})} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default RoutesItem","import React from 'react';\r\nimport RoutesItem from \"../routes\";\r\n\r\n\r\nfunction ChatBlock() {\r\n    return (\r\n        <div className=\"chat-block\">\r\n            <div className=\"blocked-wrap\">\r\n                <RoutesItem />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBlock;","import React from 'react';\r\nimport ChatWrap from './components/chatWrap';\r\nimport ChatBlock from './components/chatBlock';\r\n\r\nimport './styles/bootstrap-reboot.css';\r\nimport './styles/chat-block.css';\r\nimport './styles/chat.css';\r\nimport './styles/style.css';\r\n\r\n\r\nfunction App(props) {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-9\" style={{ display: 'flex', backgroundColor: 'white' }}>\r\n                    <ChatWrap />\r\n                    <ChatBlock />\r\n                </div>\r\n                <div className=\"col-3\" style={{color: 'white'}}>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyCtg-um1_xf4DgRwz4xzQf_V6Ea8UxpYNs\",\r\n    authDomain: \"genisis-chat.firebaseapp.com\",\r\n    databaseURL: \"https://genisis-chat.firebaseio.com\",\r\n    projectId: \"genisis-chat\",\r\n    storageBucket: \"genisis-chat.appspot.com\",\r\n    messagingSenderId: \"24700544018\",\r\n    appId: \"1:24700544018:web:bb2a0e1fd41d14b999a4cb\"\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { FirebaseAppProvider, SuspenseWithPerf } from \"reactfire\";\r\nimport { firebaseConfig } from \"./firebaseConfig\";\r\n\r\nconst app = (\r\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\r\n        <SuspenseWithPerf\r\n            fallback={'fallback'}\r\n            traceId={'traceId'}\r\n        >\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </SuspenseWithPerf>\r\n    </FirebaseAppProvider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\nserviceWorker.unregister();"],"sourceRoot":""}