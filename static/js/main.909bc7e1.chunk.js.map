{"version":3,"sources":["components/chatWrap.js","components/chatItem.js","routes.js","components/chatBlock.js","HeadwayIcon.js","App.js","serviceWorker.js","index.js"],"names":["ChatWrap","className","path","name","img","map","item","idx","key","to","src","alt","activeStyle","color","images","john_show","martin","sherlock","monica","dallas","bot","ChatItem","props","useState","messages","setMessages","text","time","Date","getHours","getMinutes","userMessage","formState","setFormState","getMessage","fetch","then","response","json","data","useEffect","style","position","Object","values","reverse","placeholder","onChange","event","target","value","prevNote","handleChange","onKeyPress","e","shiftKey","preventDefault","method","headers","body","JSON","stringify","RoutesItem","exact","component","ChatBlock","HeadwayIcon","xmlns","viewBox","width","padding","id","x1","x2","y1","y2","offset","stopColor","fill","fillRule","stroke","strokeWidth","transform","d","App","display","backgroundColor","float","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.909bc7e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nfunction ChatWrap() {\r\n\r\n    const contact_user = [\r\n        {\r\n            path: '/john_show',\r\n            name: 'John Show',\r\n            img: 'https://ktovkurse.com/wp-content/uploads/2015/06/jon-Snow-e1435181608374.jpg'\r\n        },\r\n        {\r\n            path: '/martin',\r\n            name: 'Martin',\r\n            img: 'https://lh3.googleusercontent.com/mIUvQSu1ja5Lpx-HS0ztqFPkudgzU0GGwZGJNaVZ8_D_31zC7mhw5eM8TwRJ_ByBY4UyYg=s85'\r\n        },\r\n        {\r\n            path: '/sherlock',\r\n            name: 'Sherlock',\r\n            img: 'https://i.guim.co.uk/img/static/sys-images/Guardian/Pix/pictures/2014/1/13/1389634544964/Sherlock-Holmes-BBC-011.jpg?width=445&quality=85&auto=format&fit=max&s=ff65ab18713d2fa201c8181ae127ee30'\r\n        },\r\n        {\r\n            path: '/monica',\r\n            name: 'Monica',\r\n            img: 'https://i.pinimg.com/736x/19/31/e6/1931e627532feeb3232d4e00ae5d2924.jpg'\r\n        },\r\n        {\r\n            path: '/dallas',\r\n            name: 'Dallas',\r\n            img: 'https://fs.kinomania.ru/file/person/1/c0/1c0cae540f9eeeaf4830019bd17a1e47.jpeg'\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"contacts-wrap\">\r\n            <div className=\"contact\">\r\n                {\r\n                    contact_user.map((item, idx) => (\r\n                        <div className={\"contact-user\"} key={idx}>\r\n                            <div className=\"contact-user-foto\">\r\n                                <Link to={item.path}>\r\n                                    <img src={item.img} alt={item.name} />\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"contact-user-info\">\r\n                                <div className=\"contact-user-top\">\r\n                                    <NavLink to={item.path} className=\"contact-user-name \" activeStyle={{ color: 'red' }}>{item.name}</NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWrap;","import React, {useEffect, useState} from 'react';\r\n\r\nconst images = {\r\n    john_show: 'https://ktovkurse.com/wp-content/uploads/2015/06/jon-Snow-e1435181608374.jpg',\r\n    martin: 'https://lh3.googleusercontent.com/mIUvQSu1ja5Lpx-HS0ztqFPkudgzU0GGwZGJNaVZ8_D_31zC7mhw5eM8TwRJ_ByBY4UyYg=s85',\r\n    sherlock: 'https://i.guim.co.uk/img/static/sys-images/Guardian/Pix/pictures/2014/1/13/1389634544964/Sherlock-Holmes-BBC-011.jpg?width=445&quality=85&auto=format&fit=max&s=ff65ab18713d2fa201c8181ae127ee30',\r\n    monica: 'https://i.pinimg.com/736x/19/31/e6/1931e627532feeb3232d4e00ae5d2924.jpg',\r\n    dallas:  'https://fs.kinomania.ru/file/person/1/c0/1c0cae540f9eeeaf4830019bd17a1e47.jpeg',\r\n    bot: 'https://snipp.ru/uploads/view/d880306f44d95f58d3a955e22d3ae165.png'\r\n}\r\n\r\nfunction ChatItem(props) {\r\n    const [ messages, setMessages ] = useState({})\r\n    const [ formState, setFormState ] = useState({\r\n        text: '',\r\n        time: `${new Date().getHours()} : ${new Date().getMinutes()}`,\r\n        userMessage: true\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormState((prevNote) => {\r\n            return {\r\n                ...prevNote,\r\n                [name]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const addMessage = () => {\r\n        setMessages({...messages, formState })\r\n        setFormState({\r\n            text: '',\r\n            time: `${new Date().getHours()} : ${new Date().getMinutes()}`,\r\n            userMessage: true\r\n        })\r\n\r\n    }\r\n\r\n    const handleUserKeyPress = e => {\r\n        if (e.key === \"Enter\" && !e.shiftKey) {\r\n            e.preventDefault();\r\n            addMessage();\r\n            postMessage(formState);\r\n        }\r\n    };\r\n\r\n\r\n    function postMessage(data) {\r\n        fetch(`https://genisis-chat.firebaseio.com/${props.name}.json`, {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(() => {\r\n            getMessage()\r\n        })\r\n    }\r\n\r\n    function getMessage() {\r\n        fetch(`https://genisis-chat.firebaseio.com/${props.name}.json`)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setMessages(data === null ? {} : data)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMessage()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"blocked-wrap\">\r\n            <div style={{position: 'relative'}}>\r\n                <div className=\"chat\">\r\n                    {\r\n                        messages && Object\r\n                            .values(messages)\r\n                            .reverse()\r\n                            .map((item, idx) => (\r\n                            <div className={`chat-message ${item.userMessage ? 'user-message' : ''}`} key={idx}>\r\n                                <div className=\"chat-message-foto\">\r\n                                    <img src={`${item.userMessage ? images[props.name] : images.bot}`} alt={idx} />\r\n                                </div>\r\n                                <div className=\"chat-message-text\">\r\n                                    {item.text}\r\n                                </div>\r\n                                <div className=\"chat-message-time\">{item.time}</div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"chat-form\">\r\n                <form >\r\n                    <div className=\"textarea-wrap\" >\r\n                        <textarea\r\n                            placeholder=\"Text\"\r\n                            onChange={event => handleChange(event)}\r\n                            value={formState.text}\r\n                            name=\"text\"\r\n                            onKeyPress={handleUserKeyPress}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"textarea-count-wrap\">\r\n                        <div className=\"checkbox-wrap\">\r\n                            <label>Press Enter to send</label>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatItem;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport ChatItem from \"./components/chatItem\";\r\n\r\nfunction RoutesItem() {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Redirect to=\"/john_show\" />\r\n            </Route>\r\n            <Route path='/john_show'  component={() => ChatItem({name: 'john_show'})} />\r\n            <Route path='/martin' component={() => ChatItem({name: 'martin'})} />\r\n            <Route path='/sherlock' component={() => ChatItem({name: 'sherlock'})} />\r\n            <Route path='/monica' component={() => ChatItem({name: 'monica'})} />\r\n            <Route path='/dallas' component={() => ChatItem({name: 'dallas'})} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default RoutesItem","import React from 'react';\r\nimport RoutesItem from \"../routes\"\r\n\r\nfunction ChatBlock() {\r\n    return (\r\n        <div className=\"chat-block\">\r\n            <div className=\"blocked-wrap\">\r\n                <RoutesItem />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBlock;","import React from \"react\";\r\n\r\nfunction HeadwayIcon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 195.606 50\"\r\n      style={{ width: \"100%\", padding: 5 }}\r\n    >\r\n      <defs>\r\n        <linearGradient\r\n          id=\"c39c6655-cf55-46bb-a4c7-f510fd8bc124\"\r\n          x1=\"115.647%\"\r\n          x2=\"-28.662%\"\r\n          y1=\"-16.612%\"\r\n          y2=\"129.6%\"\r\n        >\r\n          <stop offset=\"0%\" stopColor=\"#009CFF\"/>\r\n          <stop offset=\"100%\" stopColor=\"#03F\"/>\r\n        </linearGradient>\r\n      </defs>\r\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\r\n        <g transform=\"translate(-100 -80)\">\r\n          <g transform=\"translate(100 80)\">\r\n            <g>\r\n              <g>\r\n                <path\r\n    fill=\"url(#c39c6655-cf55-46bb-a4c7-f510fd8bc124)\"\r\n    d=\"M17.527 0h14.946c6.095 0 8.305.635 10.533 1.826a12.423 12.423 0 015.168 5.168C49.365 9.222 50 11.432 50 17.527v14.946c0 6.095-.635 8.305-1.826 10.533a12.423 12.423 0 01-5.168 5.168C40.778 49.365 38.568 50 32.473 50H17.527c-6.095 0-8.305-.635-10.533-1.826a12.423 12.423 0 01-5.168-5.168C.635 40.778 0 38.568 0 32.473V17.527c0-6.095.635-8.305 1.826-10.533a12.423 12.423 0 015.168-5.168C9.222.635 11.432 0 17.527 0z\"\r\n    />\r\n                <g fill=\"#FFF\" transform=\"translate(15.527 11.133)\">\r\n                  <path d=\"M3.418 1.22v5.372l1.22-1.953h10.987V1.22C15.625.437 15.818 0 17.09 0h.488c1.272 0 1.465.437 1.465 1.22v25.391c0 .784-.193 1.221-1.465 1.221h-.488c-1.272 0-1.465-.437-1.465-1.22v-3.419H3.418v3.418c0 .784-.193 1.221-1.465 1.221h-.488C.193 27.832 0 27.395 0 26.612V1.22C0 .437.193 0 1.465 0h.488c1.272 0 1.465.437 1.465 1.22zm12.207 14.16H3.418v6.837l1.22-1.953h10.987V15.38zm0-2.929V7.568H3.418v6.836l1.22-1.953h10.987z\"/>\r\n                </g>\r\n              </g>\r\n              <path\r\n    fill=\"#FFF\"\r\n    fillRule=\"nonzero\"\r\n    d=\"M75.333 14.788h4.849V36h-4.849v-8.424h-6.666V36h-4.849V14.788h4.849v8.121h6.666v-8.121zm12.394 15.454c.576 1.576 1.97 2.122 3.637 2.122 1.242 0 2.303-.485 2.909-1.152l3.636 2.091c-1.485 2.06-3.727 3.121-6.606 3.121-5.182 0-8.394-3.485-8.394-8 0-4.515 3.273-8 8.06-8 4.425 0 7.698 3.424 7.698 8 0 .637-.06 1.243-.182 1.818H87.727zm-.09-3.394h6.515c-.485-1.757-1.849-2.393-3.213-2.393-1.727 0-2.878.848-3.303 2.393zm24.605-6h4.546V36h-4.546v-1.424c-1 1.151-2.484 1.848-4.515 1.848-3.97 0-7.242-3.485-7.242-8 0-4.515 3.273-8 7.242-8 2.03 0 3.515.697 4.515 1.849v-1.425zm-3.606 11.273c2.091 0 3.606-1.424 3.606-3.697 0-2.272-1.515-3.697-3.606-3.697-2.09 0-3.606 1.425-3.606 3.697 0 2.273 1.515 3.697 3.606 3.697zm22.485-17.333h4.546V36h-4.546v-1.424c-1 1.151-2.485 1.848-4.515 1.848-3.97 0-7.242-3.485-7.242-8 0-4.515 3.272-8 7.242-8 2.03 0 3.515.697 4.515 1.849v-7.485zm-3.606 17.333c2.091 0 3.606-1.424 3.606-3.697 0-2.272-1.515-3.697-3.606-3.697-2.09 0-3.606 1.425-3.606 3.697 0 2.273 1.515 3.697 3.606 3.697zm28.152-11.273h4.848L155.667 36h-4.243L149 27.91 146.576 36h-4.243l-4.848-15.152h4.848l2.182 8.122 2.364-8.122h4.242l2.364 8.122 2.182-8.122zm17.666 0h4.546V36h-4.546v-1.424c-1 1.151-2.485 1.848-4.515 1.848-3.97 0-7.242-3.485-7.242-8 0-4.515 3.272-8 7.242-8 2.03 0 3.515.697 4.515 1.849v-1.425zm-3.606 11.273c2.091 0 3.606-1.424 3.606-3.697 0-2.272-1.515-3.697-3.606-3.697-2.09 0-3.606 1.425-3.606 3.697 0 2.273 1.515 3.697 3.606 3.697zm21.03-11.273h4.85l-5.183 14.697c-1.697 4.819-4.394 6.728-8.636 6.516v-4.243c2.121 0 3.121-.666 3.788-2.515l-6.03-14.455h5l3.363 9.273 2.849-9.273z\"\r\n    />\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default HeadwayIcon;","import React from 'react';\r\nimport ChatWrap from './components/chatWrap';\r\nimport ChatBlock from './components/chatBlock';\r\n\r\nimport './styles/bootstrap-reboot.css';\r\nimport './styles/chat-block.css';\r\nimport './styles/chat.css';\r\nimport './styles/style.css';\r\n\r\nimport HeadwayIcon from './HeadwayIcon';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-9\" style={{ display: 'flex', backgroundColor: 'white' }}>\r\n                    <ChatWrap />\r\n                    <ChatBlock />\r\n                </div>\r\n                <div className=\"col-3\" style={{color: 'white'}}>\r\n                    <HeadwayIcon />\r\n                    Тестовое задание на позицию: <br/>\r\n                    <b style={{float:'right'}}>Frontend Developer</b>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n\r\n\r\n// Set the configuration for your app\r\n// TODO: Replace with your project's config object\r\n// var config = {\r\n//     apiKey: \"apiKey\",\r\n//     authDomain: \"projectId.firebaseapp.com\",\r\n//     databaseURL: \"https://databaseName.firebaseio.com\",\r\n//     storageBucket: \"bucket.appspot.com\"\r\n// };\r\n// firebase.initializeApp(config);\r\n//\r\n// // Get a reference to the database service\r\n// var database = firebase.database();\r\n"],"sourceRoot":""}